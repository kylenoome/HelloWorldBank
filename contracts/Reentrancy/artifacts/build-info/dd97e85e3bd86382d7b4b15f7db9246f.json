{
	"id": "dd97e85e3bd86382d7b4b15f7db9246f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.6",
	"solcLongVersion": "0.6.6+commit.6c089d02",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Reentrancy/simpleReentrancy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.6;\n\ncontract simpleReentrancy {\n    \n    mapping (address => uint) private balances;\n    \n    function deposit() public payable  {\n        require((balances[msg.sender] + msg.value) >= balances[msg.sender]);\n        balances[msg.sender] += msg.value;\n\n    }\n\n    function withdraw(uint withdrawAmount) public returns (uint) {\n           \trequire(withdrawAmount <= balances[msg.sender]);\n    \t\tmsg.sender.call.value(withdrawAmount)(\"\");\n    \n    \t\tbalances[msg.sender] -= withdrawAmount;\n    \t\treturn balances[msg.sender];\n    }\n    \n    function getBalance() public view returns (uint){\n        return balances[msg.sender];\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Reentrancy/simpleReentrancy.sol": {
				"simpleReentrancy": {
					"abi": [
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "withdrawAmount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Reentrancy/simpleReentrancy.sol\":57:684  contract simpleReentrancy {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"contracts/Reentrancy/simpleReentrancy.sol\":57:684  contract simpleReentrancy {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":57:684  contract simpleReentrancy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_4\n      jumpi\n    tag_1:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":590:682  function getBalance() public view returns (uint){... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_5:\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":590:682  function getBalance() public view returns (uint){... */\n      pop\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":316:580  function withdraw(uint withdrawAmount) public returns (uint) {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_8:\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":316:580  function withdraw(uint withdrawAmount) public returns (uint) {... */\n      pop\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_10:\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":316:580  function withdraw(uint withdrawAmount) public returns (uint) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_11\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":147:310  function deposit() public payable  {... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":590:682  function getBalance() public view returns (uint){... */\n    tag_7:\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":633:637  uint */\n      0x00\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":655:663  balances */\n      dup1\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":655:675  balances[msg.sender] */\n      0x00\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":664:674  msg.sender */\n      caller\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":655:675  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":648:675  return balances[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":590:682  function getBalance() public view returns (uint){... */\n      swap1\n      jump\t// out\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":316:580  function withdraw(uint withdrawAmount) public returns (uint) {... */\n    tag_11:\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":371:375  uint */\n      0x00\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":417:425  balances */\n      dup1\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":417:437  balances[msg.sender] */\n      0x00\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":426:436  msg.sender */\n      caller\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":417:437  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":399:413  withdrawAmount */\n      dup3\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":399:437  withdrawAmount <= balances[msg.sender] */\n      gt\n      iszero\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":391:438  require(withdrawAmount <= balances[msg.sender]) */\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":391:438  require(withdrawAmount <= balances[msg.sender]) */\n    tag_16:\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":446:456  msg.sender */\n      caller\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":446:461  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":468:482  withdrawAmount */\n      dup3\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":446:487  msg.sender.call.value(withdrawAmount)(\"\") */\n      mload(0x40)\n      dup1\n      0x00\n      add\n      swap1\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":12:13   */\n      dup1\n        /* \"--CODEGEN--\":19:20   */\n      0x00\n        /* \"--CODEGEN--\":14:41   */\n      dup2\n      eq\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":67:71   */\n      0x40\n        /* \"--CODEGEN--\":61:72   */\n      mload\n        /* \"--CODEGEN--\":56:72   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":134:138   */\n      0x1f\n        /* \"--CODEGEN--\":130:139   */\n      not\n        /* \"--CODEGEN--\":123:127   */\n      0x3f\n        /* \"--CODEGEN--\":105:121   */\n      returndatasize\n        /* \"--CODEGEN--\":101:128   */\n      add\n        /* \"--CODEGEN--\":97:140   */\n      and\n        /* \"--CODEGEN--\":94:95   */\n      dup3\n        /* \"--CODEGEN--\":90:141   */\n      add\n        /* \"--CODEGEN--\":84:88   */\n      0x40\n        /* \"--CODEGEN--\":77:142   */\n      mstore\n        /* \"--CODEGEN--\":157:173   */\n      returndatasize\n        /* \"--CODEGEN--\":154:155   */\n      dup3\n        /* \"--CODEGEN--\":147:174   */\n      mstore\n        /* \"--CODEGEN--\":211:227   */\n      returndatasize\n        /* \"--CODEGEN--\":208:209   */\n      0x00\n        /* \"--CODEGEN--\":201:205   */\n      0x20\n        /* \"--CODEGEN--\":198:199   */\n      dup5\n        /* \"--CODEGEN--\":194:206   */\n      add\n        /* \"--CODEGEN--\":179:228   */\n      returndatacopy\n        /* \"--CODEGEN--\":5:233   */\n      jump(tag_18)\n        /* \"--CODEGEN--\":14:41   */\n    tag_19:\n        /* \"--CODEGEN--\":32:36   */\n      0x60\n        /* \"--CODEGEN--\":27:36   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":5:233   */\n    tag_18:\n      pop\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":446:487  msg.sender.call.value(withdrawAmount)(\"\") */\n      pop\n      pop\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":524:538  withdrawAmount */\n      dup2\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":500:508  balances */\n      0x00\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":500:520  balances[msg.sender] */\n      dup1\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":509:519  msg.sender */\n      caller\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":500:520  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":500:538  balances[msg.sender] -= withdrawAmount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":553:561  balances */\n      0x00\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":553:573  balances[msg.sender] */\n      dup1\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":562:572  msg.sender */\n      caller\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":553:573  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":546:573  return balances[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":316:580  function withdraw(uint withdrawAmount) public returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":147:310  function deposit() public payable  {... */\n    tag_13:\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":238:246  balances */\n      0x00\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":238:258  balances[msg.sender] */\n      dup1\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":247:257  msg.sender */\n      caller\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":238:258  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":224:233  msg.value */\n      callvalue\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":201:209  balances */\n      0x00\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":201:221  balances[msg.sender] */\n      dup1\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":210:220  msg.sender */\n      caller\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":201:221  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":201:233  balances[msg.sender] + msg.value */\n      add\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":200:258  (balances[msg.sender] + msg.value) >= balances[msg.sender] */\n      lt\n      iszero\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":192:259  require((balances[msg.sender] + msg.value) >= balances[msg.sender]) */\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":192:259  require((balances[msg.sender] + msg.value) >= balances[msg.sender]) */\n    tag_21:\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":293:302  msg.value */\n      callvalue\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":269:277  balances */\n      0x00\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":269:289  balances[msg.sender] */\n      dup1\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":278:288  msg.sender */\n      caller\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":269:289  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":269:302  balances[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Reentrancy/simpleReentrancy.sol\":147:310  function deposit() public payable  {... */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bcef4307133e21ea6557666d7fdfb40b44cee62d6431870d88ba8803f0f2587064736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610357806100206000396000f3fe6080604052600436106100345760003560e01c806312065fe0146100395780632e1a7d4d14610064578063d0e30db0146100b3575b600080fd5b34801561004557600080fd5b5061004e6100bd565b6040518082815260200191505060405180910390f35b34801561007057600080fd5b5061009d6004803603602081101561008757600080fd5b8101908080359060200190929190505050610103565b6040518082815260200191505060405180910390f35b6100bb610248565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561015057600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d80600081146101ae576040519150601f19603f3d011682016040523d82523d6000602084013e6101b3565b606091505b505050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540110156102d357600080fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555056fea2646970667358221220bcef4307133e21ea6557666d7fdfb40b44cee62d6431870d88ba8803f0f2587064736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x357 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0xB3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0xBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1AE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD LT ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xEF NUMBER SMOD SGT RETURNDATACOPY 0x21 0xEA PUSH6 0x57666D7FDFB4 SIGNEXTEND DIFFICULTY 0xCE 0xE6 0x2D PUSH5 0x31870D88BA DUP9 SUB CREATE CALLCODE PC PUSH17 0x64736F6C63430006060033000000000000 ",
							"sourceMap": "57:627:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;57:627:0;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c806312065fe0146100395780632e1a7d4d14610064578063d0e30db0146100b3575b600080fd5b34801561004557600080fd5b5061004e6100bd565b6040518082815260200191505060405180910390f35b34801561007057600080fd5b5061009d6004803603602081101561008757600080fd5b8101908080359060200190929190505050610103565b6040518082815260200191505060405180910390f35b6100bb610248565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561015057600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d80600081146101ae576040519150601f19603f3d011682016040523d82523d6000602084013e6101b3565b606091505b505050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540110156102d357600080fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555056fea2646970667358221220bcef4307133e21ea6557666d7fdfb40b44cee62d6431870d88ba8803f0f2587064736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0xB3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0xBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1AE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD LT ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xEF NUMBER SMOD SGT RETURNDATACOPY 0x21 0xEA PUSH6 0x57666D7FDFB4 SIGNEXTEND DIFFICULTY 0xCE 0xE6 0x2D PUSH5 0x31870D88BA DUP9 SUB CREATE CALLCODE PC PUSH17 0x64736F6C63430006060033000000000000 ",
							"sourceMap": "57:627:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;590:92:0;;5:9:-1;2:2;;;27:1;24;17:12;2:2;590:92:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;316:264;;5:9:-1;2:2;;;27:1;24;17:12;2:2;316:264:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;316:264:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;147:163;;;:::i;:::-;;590:92;633:4;655:8;:20;664:10;655:20;;;;;;;;;;;;;;;;648:27;;590:92;:::o;316:264::-;371:4;417:8;:20;426:10;417:20;;;;;;;;;;;;;;;;399:14;:38;;391:47;;12:1:-1;9;2:12;391:47:0;446:10;:15;;468:14;446:41;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;446:41:0;;524:14;500:8;:20;509:10;500:20;;;;;;;;;;;;;;;;:38;;;;;;;;;;;553:8;:20;562:10;553:20;;;;;;;;;;;;;;;;546:27;;316:264;;;:::o;147:163::-;238:8;:20;247:10;238:20;;;;;;;;;;;;;;;;224:9;201:8;:20;210:10;201:20;;;;;;;;;;;;;;;;:32;200:58;;192:67;;12:1:-1;9;2:12;192:67:0;293:9;269:8;:20;278:10;269:20;;;;;;;;;;;;;;;;:33;;;;;;;;;;;147:163::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "171000",
								"executionCost": "214",
								"totalCost": "171214"
							},
							"external": {
								"deposit()": "22872",
								"getBalance()": "1080",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 684,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 684,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 684,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 684,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 57,
									"end": 684,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 684,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 684,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 684,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 684,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 684,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 684,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 684,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bcef4307133e21ea6557666d7fdfb40b44cee62d6431870d88ba8803f0f2587064736f6c63430006060033",
									".code": [
										{
											"begin": 57,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 684,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 684,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 684,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 684,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "12065FE0"
										},
										{
											"begin": 57,
											"end": 684,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 57,
											"end": 684,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "D0E30DB0"
										},
										{
											"begin": 57,
											"end": 684,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 684,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 590,
											"end": 682,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 590,
											"end": 682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 590,
											"end": 682,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 590,
											"end": 682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 590,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 590,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 590,
											"end": 682,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 590,
											"end": 682,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 590,
											"end": 682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 590,
											"end": 682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 590,
											"end": 682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 590,
											"end": 682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 590,
											"end": 682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 590,
											"end": 682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 590,
											"end": 682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 590,
											"end": 682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 590,
											"end": 682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 590,
											"end": 682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 590,
											"end": 682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 590,
											"end": 682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 590,
											"end": 682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 590,
											"end": 682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 590,
											"end": 682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 590,
											"end": 682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 590,
											"end": 682,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 590,
											"end": 682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 590,
											"end": 682,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 316,
											"end": 580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 316,
											"end": 580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 316,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 316,
											"end": 580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 316,
											"end": 580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 316,
											"end": 580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 316,
											"end": 580,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 316,
											"end": 580,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 316,
											"end": 580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 580,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 316,
											"end": 580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 580,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 147,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 147,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 147,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 147,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 147,
											"end": 310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 147,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 147,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 147,
											"end": 310,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 590,
											"end": 682,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 590,
											"end": 682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 633,
											"end": 637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 655,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 664,
											"end": 674,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 655,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 655,
											"end": 675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 655,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 655,
											"end": 675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 655,
											"end": 675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 655,
											"end": 675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 655,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 655,
											"end": 675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 655,
											"end": 675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 655,
											"end": 675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 655,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 655,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 675,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 655,
											"end": 675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 648,
											"end": 675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 648,
											"end": 675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 590,
											"end": 682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 590,
											"end": 682,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 316,
											"end": 580,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 316,
											"end": 580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 371,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 417,
											"end": 437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 436,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 417,
											"end": 437,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 417,
											"end": 437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 417,
											"end": 437,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 417,
											"end": 437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 417,
											"end": 437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 417,
											"end": 437,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 417,
											"end": 437,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 417,
											"end": 437,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 417,
											"end": 437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 417,
											"end": 437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 417,
											"end": 437,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 417,
											"end": 437,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 417,
											"end": 437,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 417,
											"end": 437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 437,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 417,
											"end": 437,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 399,
											"end": 413,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 399,
											"end": 437,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 399,
											"end": 437,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 391,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 391,
											"end": 438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 391,
											"end": 438,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 391,
											"end": 438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 446,
											"end": 456,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 446,
											"end": 461,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 446,
											"end": 461,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 468,
											"end": 482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 446,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 487,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 446,
											"end": 487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 487,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 446,
											"end": 487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 487,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 446,
											"end": 487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 487,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 446,
											"end": 487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 446,
											"end": 487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 446,
											"end": 487,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 446,
											"end": 487,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 446,
											"end": 487,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 446,
											"end": 487,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 446,
											"end": 487,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 446,
											"end": 487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 487,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 19,
											"end": 20,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 67,
											"end": 71,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 72,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 134,
											"end": 138,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 130,
											"end": 139,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 127,
											"name": "PUSH",
											"source": -1,
											"value": "3F"
										},
										{
											"begin": 105,
											"end": 121,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 101,
											"end": 128,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 140,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 94,
											"end": 95,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 141,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 88,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 77,
											"end": 142,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 154,
											"end": 155,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 174,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 211,
											"end": 227,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 208,
											"end": 209,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 205,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 198,
											"end": 199,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 194,
											"end": 206,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 179,
											"end": 228,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "18"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "tag",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32,
											"end": 36,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 27,
											"end": 36,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 36,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "tag",
											"source": -1,
											"value": "18"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 446,
											"end": 487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 524,
											"end": 538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 500,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 509,
											"end": 519,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 500,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 500,
											"end": 520,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 500,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 500,
											"end": 520,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 500,
											"end": 520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 500,
											"end": 520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 500,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 500,
											"end": 520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 500,
											"end": 520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 500,
											"end": 520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 500,
											"end": 520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 500,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 500,
											"end": 520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 500,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 520,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 500,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 538,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 500,
											"end": 538,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 500,
											"end": 538,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 500,
											"end": 538,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 500,
											"end": 538,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 500,
											"end": 538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 500,
											"end": 538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 500,
											"end": 538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 500,
											"end": 538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 500,
											"end": 538,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 500,
											"end": 538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 553,
											"end": 561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 562,
											"end": 572,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 553,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 553,
											"end": 573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 553,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 553,
											"end": 573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 553,
											"end": 573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 553,
											"end": 573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 553,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 553,
											"end": 573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 553,
											"end": 573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 553,
											"end": 573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 553,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 553,
											"end": 573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 553,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 573,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 553,
											"end": 573,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 546,
											"end": 573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 546,
											"end": 573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 580,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 147,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 147,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 238,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 257,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 238,
											"end": 258,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 238,
											"end": 258,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 238,
											"end": 258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 238,
											"end": 258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 238,
											"end": 258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 238,
											"end": 258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 238,
											"end": 258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 238,
											"end": 258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 238,
											"end": 258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 238,
											"end": 258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 238,
											"end": 258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 224,
											"end": 233,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 201,
											"end": 209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 210,
											"end": 220,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 201,
											"end": 221,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 201,
											"end": 221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 201,
											"end": 221,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 201,
											"end": 221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 201,
											"end": 221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 201,
											"end": 221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 201,
											"end": 221,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 201,
											"end": 221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 201,
											"end": 221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 201,
											"end": 221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 201,
											"end": 221,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 201,
											"end": 221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 201,
											"end": 221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 221,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 201,
											"end": 221,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 201,
											"end": 233,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 258,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 200,
											"end": 258,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 192,
											"end": 259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 259,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 192,
											"end": 259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 302,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 269,
											"end": 277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 288,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 302,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 269,
											"end": 302,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 269,
											"end": 302,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 269,
											"end": 302,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 269,
											"end": 302,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 269,
											"end": 302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 269,
											"end": 302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 269,
											"end": 302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 269,
											"end": 302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 269,
											"end": 302,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 269,
											"end": 302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 310,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"getBalance()": "12065fe0",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Reentrancy/simpleReentrancy.sol\":\"simpleReentrancy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Reentrancy/simpleReentrancy.sol\":{\"keccak256\":\"0x232decaabb887587784585a04e53005c834f0ccbd113ae7af196b4ad8d857f53\",\"urls\":[\"bzz-raw://b8cce9c0ed0a512aa341f19a57bc2945cc93c4d3293c43252b71bb8c4fe23850\",\"dweb:/ipfs/QmaGA849LoWWEfVBY6af5DJZEEenyJxPVrLQX3Zkf5LE1e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/Reentrancy/simpleReentrancy.sol:simpleReentrancy",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/Reentrancy/simpleReentrancy.sol:16:7: Warning: Using \".value(...)\" is deprecated. Use \"{value: ...}\" instead.\n    \t\tmsg.sender.call.value(withdrawAmount)(\"\");\n    \t\t^-------------------^\n",
				"message": "Using \".value(...)\" is deprecated. Use \"{value: ...}\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 467,
					"file": "contracts/Reentrancy/simpleReentrancy.sol",
					"start": 446
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/Reentrancy/simpleReentrancy.sol:16:7: Warning: Return value of low-level calls not used.\n    \t\tmsg.sender.call.value(withdrawAmount)(\"\");\n    \t\t^---------------------------------------^\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 487,
					"file": "contracts/Reentrancy/simpleReentrancy.sol",
					"start": 446
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Reentrancy/simpleReentrancy.sol": {
				"ast": {
					"absolutePath": "contracts/Reentrancy/simpleReentrancy.sol",
					"exportedSymbols": {
						"simpleReentrancy": [
							86
						]
					},
					"id": 87,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 86,
							"linearizedBaseContracts": [
								86
							],
							"name": "simpleReentrancy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 86,
									"src": "94:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "103:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "94:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "114:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "182:128:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 15,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 9,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5,
																				"src": "201:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 12,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 10,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -15,
																					"src": "210:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 11,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "210:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "201:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 13,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "224:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 14,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "224:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "201:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 16,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "200:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 17,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "238:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 20,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 18,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "247:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 19,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "247:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "238:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "200:58:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 8,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "192:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "192:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "192:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 24,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "269:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 27,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 25,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "278:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "278:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "269:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 28,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "293:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "293:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "269:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "269:33:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d0e30db0",
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "182:0:0"
									},
									"scope": 86,
									"src": "147:163:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "377:203:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 41,
																"name": "withdrawAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 35,
																"src": "399:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 42,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "417:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 45,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 43,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "426:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 44,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "426:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "417:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "399:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 40,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "391:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "391:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "391:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "484:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"arguments": [
															{
																"argumentTypes": null,
																"id": 56,
																"name": "withdrawAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 35,
																"src": "468:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 49,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "446:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "446:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "call",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "446:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																}
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "446:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
																"typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "446:37:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "446:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "446:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 61,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "500:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 64,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 62,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "509:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "509:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "500:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 65,
														"name": "withdrawAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "524:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "500:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "500:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 68,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "553:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 71,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 69,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "562:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "562:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "553:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 39,
												"id": 72,
												"nodeType": "Return",
												"src": "546:27:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "2e1a7d4d",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "withdrawAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "334:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "334:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "333:21:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "371:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "371:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "370:6:0"
									},
									"scope": 86,
									"src": "316:264:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "638:44:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 79,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "655:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 82,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 80,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "664:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "664:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "655:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 78,
												"id": 83,
												"nodeType": "Return",
												"src": "648:27:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "12065fe0",
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "609:2:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 85,
												"src": "633:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "633:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "632:6:0"
									},
									"scope": 86,
									"src": "590:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 87,
							"src": "57:627:0"
						}
					],
					"src": "32:652:0"
				},
				"id": 0
			}
		}
	}
}