{
	"id": "71ce18b0b442d1392a3c5e25dab29763",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.6",
	"solcLongVersion": "0.6.6+commit.6c089d02",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BEC_Target/BEC_Target.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.6; \n\n    contract BEC_Target {\n        mapping(address=> uint) balances;\n        \n    \n        function batchTransfer(address[] memory _receivers, uint256 _value) public returns (bool) {\n            uint cnt = _receivers.length;\n            uint256 amount = uint256(cnt) * _value;\n            require(cnt > 0 && cnt <= 20);\n            require(_value > 0 && balances[msg.sender] >= amount);\n\n            balances[msg.sender] = balances[msg.sender] - amount;\n            for (uint i = 0; i < cnt; i++) {\n                balances[_receivers[i]] = balances[_receivers[i]] + _value;\n                // Transfer(msg.sender, _receivers[i], _value);\n            }\n            return true;\n        }\n\n        function getBalance() public view returns(uint){\n            return balances[msg.sender];\n        }\n        \n        function deposit() public payable{\n            balances[msg.sender] += msg.value;\n        }\n    }"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/BEC_Target/BEC_Target.sol": {
				"BEC_Target": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_receivers",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "batchTransfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/BEC_Target/BEC_Target.sol\":61:967  contract BEC_Target {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"contracts/BEC_Target/BEC_Target.sol\":61:967  contract BEC_Target {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BEC_Target/BEC_Target.sol\":61:967  contract BEC_Target {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x83f12fec\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_4\n      jumpi\n    tag_1:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/BEC_Target/BEC_Target.sol\":753:852  function getBalance() public view returns(uint){... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_5:\n        /* \"contracts/BEC_Target/BEC_Target.sol\":753:852  function getBalance() public view returns(uint){... */\n      pop\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEC_Target/BEC_Target.sol\":147:743  function batchTransfer(address[] memory _receivers, uint256 _value) public returns (bool) {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_8:\n        /* \"contracts/BEC_Target/BEC_Target.sol\":147:743  function batchTransfer(address[] memory _receivers, uint256 _value) public returns (bool) {... */\n      pop\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_10:\n        /* \"contracts/BEC_Target/BEC_Target.sol\":147:743  function batchTransfer(address[] memory _receivers, uint256 _value) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":27:38   */\n      0x0100000000\n        /* \"--CODEGEN--\":14:25   */\n      dup2\n        /* \"--CODEGEN--\":11:39   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":52:53   */\n      0x00\n        /* \"--CODEGEN--\":49:50   */\n      dup1\n        /* \"--CODEGEN--\":42:54   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_11:\n        /* \"contracts/BEC_Target/BEC_Target.sol\":147:743  function batchTransfer(address[] memory _receivers, uint256 _value) public returns (bool) {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":41:50   */\n      dup4\n        /* \"--CODEGEN--\":34:38   */\n      0x20\n        /* \"--CODEGEN--\":18:32   */\n      dup3\n        /* \"--CODEGEN--\":14:39   */\n      add\n        /* \"--CODEGEN--\":11:51   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":64:65   */\n      0x00\n        /* \"--CODEGEN--\":61:62   */\n      dup1\n        /* \"--CODEGEN--\":54:66   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_12:\n        /* \"contracts/BEC_Target/BEC_Target.sol\":147:743  function batchTransfer(address[] memory _receivers, uint256 _value) public returns (bool) {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_13:\n        /* \"contracts/BEC_Target/BEC_Target.sol\":147:743  function batchTransfer(address[] memory _receivers, uint256 _value) public returns (bool) {... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/BEC_Target/BEC_Target.sol\":147:743  function batchTransfer(address[] memory _receivers, uint256 _value) public returns (bool) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEC_Target/BEC_Target.sol\":870:961  function deposit() public payable{... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/BEC_Target/BEC_Target.sol\":753:852  function getBalance() public view returns(uint){... */\n    tag_7:\n        /* \"contracts/BEC_Target/BEC_Target.sol\":795:799  uint */\n      0x00\n        /* \"contracts/BEC_Target/BEC_Target.sol\":821:829  balances */\n      dup1\n        /* \"contracts/BEC_Target/BEC_Target.sol\":821:841  balances[msg.sender] */\n      0x00\n        /* \"contracts/BEC_Target/BEC_Target.sol\":830:840  msg.sender */\n      caller\n        /* \"contracts/BEC_Target/BEC_Target.sol\":821:841  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEC_Target/BEC_Target.sol\":814:841  return balances[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/BEC_Target/BEC_Target.sol\":753:852  function getBalance() public view returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEC_Target/BEC_Target.sol\":147:743  function batchTransfer(address[] memory _receivers, uint256 _value) public returns (bool) {... */\n    tag_14:\n        /* \"contracts/BEC_Target/BEC_Target.sol\":231:235  bool */\n      0x00\n        /* \"contracts/BEC_Target/BEC_Target.sol\":251:259  uint cnt */\n      dup1\n        /* \"contracts/BEC_Target/BEC_Target.sol\":262:272  _receivers */\n      dup4\n        /* \"contracts/BEC_Target/BEC_Target.sol\":262:279  _receivers.length */\n      mload\n        /* \"contracts/BEC_Target/BEC_Target.sol\":251:279  uint cnt = _receivers.length */\n      swap1\n      pop\n        /* \"contracts/BEC_Target/BEC_Target.sol\":293:307  uint256 amount */\n      0x00\n        /* \"contracts/BEC_Target/BEC_Target.sol\":325:331  _value */\n      dup4\n        /* \"contracts/BEC_Target/BEC_Target.sol\":318:321  cnt */\n      dup3\n        /* \"contracts/BEC_Target/BEC_Target.sol\":310:331  uint256(cnt) * _value */\n      mul\n        /* \"contracts/BEC_Target/BEC_Target.sol\":293:331  uint256 amount = uint256(cnt) * _value */\n      swap1\n      pop\n        /* \"contracts/BEC_Target/BEC_Target.sol\":359:360  0 */\n      0x00\n        /* \"contracts/BEC_Target/BEC_Target.sol\":353:356  cnt */\n      dup3\n        /* \"contracts/BEC_Target/BEC_Target.sol\":353:360  cnt > 0 */\n      gt\n        /* \"contracts/BEC_Target/BEC_Target.sol\":353:373  cnt > 0 && cnt <= 20 */\n      dup1\n      iszero\n      tag_19\n      jumpi\n      pop\n        /* \"contracts/BEC_Target/BEC_Target.sol\":371:373  20 */\n      0x14\n        /* \"contracts/BEC_Target/BEC_Target.sol\":364:367  cnt */\n      dup3\n        /* \"contracts/BEC_Target/BEC_Target.sol\":364:373  cnt <= 20 */\n      gt\n      iszero\n        /* \"contracts/BEC_Target/BEC_Target.sol\":353:373  cnt > 0 && cnt <= 20 */\n    tag_19:\n        /* \"contracts/BEC_Target/BEC_Target.sol\":345:374  require(cnt > 0 && cnt <= 20) */\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/BEC_Target/BEC_Target.sol\":345:374  require(cnt > 0 && cnt <= 20) */\n    tag_20:\n        /* \"contracts/BEC_Target/BEC_Target.sol\":405:406  0 */\n      0x00\n        /* \"contracts/BEC_Target/BEC_Target.sol\":396:402  _value */\n      dup5\n        /* \"contracts/BEC_Target/BEC_Target.sol\":396:406  _value > 0 */\n      gt\n        /* \"contracts/BEC_Target/BEC_Target.sol\":396:440  _value > 0 && balances[msg.sender] >= amount */\n      dup1\n      iszero\n      tag_21\n      jumpi\n      pop\n        /* \"contracts/BEC_Target/BEC_Target.sol\":434:440  amount */\n      dup1\n        /* \"contracts/BEC_Target/BEC_Target.sol\":410:418  balances */\n      0x00\n        /* \"contracts/BEC_Target/BEC_Target.sol\":410:430  balances[msg.sender] */\n      dup1\n        /* \"contracts/BEC_Target/BEC_Target.sol\":419:429  msg.sender */\n      caller\n        /* \"contracts/BEC_Target/BEC_Target.sol\":410:430  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEC_Target/BEC_Target.sol\":410:440  balances[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"contracts/BEC_Target/BEC_Target.sol\":396:440  _value > 0 && balances[msg.sender] >= amount */\n    tag_21:\n        /* \"contracts/BEC_Target/BEC_Target.sol\":388:441  require(_value > 0 && balances[msg.sender] >= amount) */\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/BEC_Target/BEC_Target.sol\":388:441  require(_value > 0 && balances[msg.sender] >= amount) */\n    tag_22:\n        /* \"contracts/BEC_Target/BEC_Target.sol\":502:508  amount */\n      dup1\n        /* \"contracts/BEC_Target/BEC_Target.sol\":479:487  balances */\n      0x00\n        /* \"contracts/BEC_Target/BEC_Target.sol\":479:499  balances[msg.sender] */\n      dup1\n        /* \"contracts/BEC_Target/BEC_Target.sol\":488:498  msg.sender */\n      caller\n        /* \"contracts/BEC_Target/BEC_Target.sol\":479:499  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEC_Target/BEC_Target.sol\":479:508  balances[msg.sender] - amount */\n      sub\n        /* \"contracts/BEC_Target/BEC_Target.sol\":456:464  balances */\n      0x00\n        /* \"contracts/BEC_Target/BEC_Target.sol\":456:476  balances[msg.sender] */\n      dup1\n        /* \"contracts/BEC_Target/BEC_Target.sol\":465:475  msg.sender */\n      caller\n        /* \"contracts/BEC_Target/BEC_Target.sol\":456:476  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEC_Target/BEC_Target.sol\":456:508  balances[msg.sender] = balances[msg.sender] - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEC_Target/BEC_Target.sol\":527:533  uint i */\n      0x00\n        /* \"contracts/BEC_Target/BEC_Target.sol\":536:537  0 */\n      dup1\n        /* \"contracts/BEC_Target/BEC_Target.sol\":527:537  uint i = 0 */\n      swap1\n      pop\n        /* \"contracts/BEC_Target/BEC_Target.sol\":522:708  for (uint i = 0; i < cnt; i++) {... */\n    tag_23:\n        /* \"contracts/BEC_Target/BEC_Target.sol\":543:546  cnt */\n      dup3\n        /* \"contracts/BEC_Target/BEC_Target.sol\":539:540  i */\n      dup2\n        /* \"contracts/BEC_Target/BEC_Target.sol\":539:546  i < cnt */\n      lt\n        /* \"contracts/BEC_Target/BEC_Target.sol\":522:708  for (uint i = 0; i < cnt; i++) {... */\n      iszero\n      tag_24\n      jumpi\n        /* \"contracts/BEC_Target/BEC_Target.sol\":623:629  _value */\n      dup5\n        /* \"contracts/BEC_Target/BEC_Target.sol\":597:605  balances */\n      0x00\n        /* \"contracts/BEC_Target/BEC_Target.sol\":597:620  balances[_receivers[i]] */\n      dup1\n        /* \"contracts/BEC_Target/BEC_Target.sol\":606:616  _receivers */\n      dup9\n        /* \"contracts/BEC_Target/BEC_Target.sol\":617:618  i */\n      dup5\n        /* \"contracts/BEC_Target/BEC_Target.sol\":606:619  _receivers[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_26\n      jumpi\n      invalid\n    tag_26:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BEC_Target/BEC_Target.sol\":597:620  balances[_receivers[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEC_Target/BEC_Target.sol\":597:629  balances[_receivers[i]] + _value */\n      add\n        /* \"contracts/BEC_Target/BEC_Target.sol\":571:579  balances */\n      0x00\n        /* \"contracts/BEC_Target/BEC_Target.sol\":571:594  balances[_receivers[i]] */\n      dup1\n        /* \"contracts/BEC_Target/BEC_Target.sol\":580:590  _receivers */\n      dup9\n        /* \"contracts/BEC_Target/BEC_Target.sol\":591:592  i */\n      dup5\n        /* \"contracts/BEC_Target/BEC_Target.sol\":580:593  _receivers[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_27\n      jumpi\n      invalid\n    tag_27:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BEC_Target/BEC_Target.sol\":571:594  balances[_receivers[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEC_Target/BEC_Target.sol\":571:629  balances[_receivers[i]] = balances[_receivers[i]] + _value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEC_Target/BEC_Target.sol\":548:551  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/BEC_Target/BEC_Target.sol\":522:708  for (uint i = 0; i < cnt; i++) {... */\n      jump(tag_23)\n    tag_24:\n      pop\n        /* \"contracts/BEC_Target/BEC_Target.sol\":728:732  true */\n      0x01\n        /* \"contracts/BEC_Target/BEC_Target.sol\":721:732  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/BEC_Target/BEC_Target.sol\":147:743  function batchTransfer(address[] memory _receivers, uint256 _value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEC_Target/BEC_Target.sol\":870:961  function deposit() public payable{... */\n    tag_16:\n        /* \"contracts/BEC_Target/BEC_Target.sol\":941:950  msg.value */\n      callvalue\n        /* \"contracts/BEC_Target/BEC_Target.sol\":917:925  balances */\n      0x00\n        /* \"contracts/BEC_Target/BEC_Target.sol\":917:937  balances[msg.sender] */\n      dup1\n        /* \"contracts/BEC_Target/BEC_Target.sol\":926:936  msg.sender */\n      caller\n        /* \"contracts/BEC_Target/BEC_Target.sol\":917:937  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BEC_Target/BEC_Target.sol\":917:950  balances[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEC_Target/BEC_Target.sol\":870:961  function deposit() public payable{... */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fda57075bdcc05ccc9dc3b98105af2a75fb96fdba11366efc7863adc75587a0f64736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506103f2806100206000396000f3fe6080604052600436106100345760003560e01c806312065fe01461003957806383f12fec14610064578063d0e30db01461014b575b600080fd5b34801561004557600080fd5b5061004e610155565b6040518082815260200191505060405180910390f35b34801561007057600080fd5b506101316004803603604081101561008757600080fd5b81019080803590602001906401000000008111156100a457600080fd5b8201836020820111156100b657600080fd5b803590602001918460208302840111640100000000831117156100d857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919050505061019b565b604051808215151515815260200191505060405180910390f35b61015361036e565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60008083519050600083820290506000821180156101ba575060148211155b6101c357600080fd5b6000841180156102115750806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b61021a57600080fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008090505b8281101561036157846000808884815181106102bb57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540160008088848151811061030e57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806001019150506102a3565b5060019250505092915050565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555056fea2646970667358221220fda57075bdcc05ccc9dc3b98105af2a75fb96fdba11366efc7863adc75587a0f64736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x83F12FEC EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x36E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 MLOAD SWAP1 POP PUSH1 0x0 DUP4 DUP3 MUL SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x1BA JUMPI POP PUSH1 0x14 DUP3 GT ISZERO JUMPDEST PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 GT DUP1 ISZERO PUSH2 0x211 JUMPI POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO JUMPDEST PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x361 JUMPI DUP5 PUSH1 0x0 DUP1 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2BB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD PUSH1 0x0 DUP1 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x30E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2A3 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xA5 PUSH17 0x75BDCC05CCC9DC3B98105AF2A75FB96FDB LOG1 SGT PUSH7 0xEFC7863ADC7558 PUSH27 0xF64736F6C63430006060033000000000000000000000000000000 ",
							"sourceMap": "61:906:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;61:906:0;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c806312065fe01461003957806383f12fec14610064578063d0e30db01461014b575b600080fd5b34801561004557600080fd5b5061004e610155565b6040518082815260200191505060405180910390f35b34801561007057600080fd5b506101316004803603604081101561008757600080fd5b81019080803590602001906401000000008111156100a457600080fd5b8201836020820111156100b657600080fd5b803590602001918460208302840111640100000000831117156100d857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919050505061019b565b604051808215151515815260200191505060405180910390f35b61015361036e565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60008083519050600083820290506000821180156101ba575060148211155b6101c357600080fd5b6000841180156102115750806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b61021a57600080fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008090505b8281101561036157846000808884815181106102bb57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540160008088848151811061030e57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806001019150506102a3565b5060019250505092915050565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555056fea2646970667358221220fda57075bdcc05ccc9dc3b98105af2a75fb96fdba11366efc7863adc75587a0f64736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x83F12FEC EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x36E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 MLOAD SWAP1 POP PUSH1 0x0 DUP4 DUP3 MUL SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x1BA JUMPI POP PUSH1 0x14 DUP3 GT ISZERO JUMPDEST PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 GT DUP1 ISZERO PUSH2 0x211 JUMPI POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO JUMPDEST PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x361 JUMPI DUP5 PUSH1 0x0 DUP1 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2BB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD PUSH1 0x0 DUP1 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x30E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2A3 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xA5 PUSH17 0x75BDCC05CCC9DC3B98105AF2A75FB96FDB LOG1 SGT PUSH7 0xEFC7863ADC7558 PUSH27 0xF64736F6C63430006060033000000000000000000000000000000 ",
							"sourceMap": "61:906:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;753:99:0;;5:9:-1;2:2;;;27:1;24;17:12;2:2;753:99:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;147:596;;5:9:-1;2:2;;;27:1;24;17:12;2:2;147:596:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;147:596:0;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;147:596:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;147:596:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;147:596:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;:596:0;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;870:91;;;:::i;:::-;;753:99;795:4;821:8;:20;830:10;821:20;;;;;;;;;;;;;;;;814:27;;753:99;:::o;147:596::-;231:4;251:8;262:10;:17;251:28;;293:14;325:6;318:3;310:21;293:38;;359:1;353:3;:7;:20;;;;;371:2;364:3;:9;;353:20;345:29;;12:1:-1;9;2:12;345:29:0;405:1;396:6;:10;:44;;;;;434:6;410:8;:20;419:10;410:20;;;;;;;;;;;;;;;;:30;;396:44;388:53;;12:1:-1;9;2:12;388:53:0;502:6;479:8;:20;488:10;479:20;;;;;;;;;;;;;;;;:29;456:8;:20;465:10;456:20;;;;;;;;;;;;;;;:52;;;;527:6;536:1;527:10;;522:186;543:3;539:1;:7;522:186;;;623:6;597:8;:23;606:10;617:1;606:13;;;;;;;;;;;;;;597:23;;;;;;;;;;;;;;;;:32;571:8;:23;580:10;591:1;580:13;;;;;;;;;;;;;;571:23;;;;;;;;;;;;;;;:58;;;;548:3;;;;;;;522:186;;;;728:4;721:11;;;;147:596;;;;:::o;870:91::-;941:9;917:8;:20;926:10;917:20;;;;;;;;;;;;;;;;:33;;;;;;;;;;;870:91::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "202000",
								"executionCost": "245",
								"totalCost": "202245"
							},
							"external": {
								"batchTransfer(address[],uint256)": "infinite",
								"deposit()": "21063",
								"getBalance()": "1080"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 967,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 967,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 61,
									"end": 967,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61,
									"end": 967,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 967,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 967,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 967,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 967,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fda57075bdcc05ccc9dc3b98105af2a75fb96fdba11366efc7863adc75587a0f64736f6c63430006060033",
									".code": [
										{
											"begin": 61,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 967,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 967,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 967,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 967,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "12065FE0"
										},
										{
											"begin": 61,
											"end": 967,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "83F12FEC"
										},
										{
											"begin": 61,
											"end": 967,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "D0E30DB0"
										},
										{
											"begin": 61,
											"end": 967,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 967,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 753,
											"end": 852,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 753,
											"end": 852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 753,
											"end": 852,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 753,
											"end": 852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 753,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 753,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 753,
											"end": 852,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 753,
											"end": 852,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 753,
											"end": 852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 753,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 753,
											"end": 852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 753,
											"end": 852,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 753,
											"end": 852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 753,
											"end": 852,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 753,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 753,
											"end": 852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 753,
											"end": 852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 753,
											"end": 852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 753,
											"end": 852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 753,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 753,
											"end": 852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 753,
											"end": 852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 753,
											"end": 852,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 753,
											"end": 852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 753,
											"end": 852,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 147,
											"end": 743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 147,
											"end": 743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 147,
											"end": 743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 147,
											"end": 743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 147,
											"end": 743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 147,
											"end": 743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 14,
											"end": 25,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 11,
											"end": 39,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "11"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 42,
											"end": 54,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "11"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 147,
											"end": 743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41,
											"end": 50,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 34,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18,
											"end": 32,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 39,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "12"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 64,
											"end": 65,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 62,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 54,
											"end": 66,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "12"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 147,
											"end": 743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 147,
											"end": 743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 147,
											"end": 743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 147,
											"end": 743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 147,
											"end": 743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 147,
											"end": 743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 147,
											"end": 743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 147,
											"end": 743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 147,
											"end": 743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 147,
											"end": 743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 147,
											"end": 743,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 147,
											"end": 743,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 147,
											"end": 743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 147,
											"end": 743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 147,
											"end": 743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 147,
											"end": 743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 870,
											"end": 961,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 870,
											"end": 961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 870,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 870,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 870,
											"end": 961,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 961,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 870,
											"end": 961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 870,
											"end": 961,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 753,
											"end": 852,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 753,
											"end": 852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 795,
											"end": 799,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 821,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 840,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 821,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 821,
											"end": 841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 821,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 821,
											"end": 841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 821,
											"end": 841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 821,
											"end": 841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 821,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 821,
											"end": 841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 821,
											"end": 841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 821,
											"end": 841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 821,
											"end": 841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 821,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 821,
											"end": 841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 821,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 841,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 821,
											"end": 841,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 814,
											"end": 841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 814,
											"end": 841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 753,
											"end": 852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 753,
											"end": 852,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 147,
											"end": 743,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 147,
											"end": 743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 231,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 262,
											"end": 279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 251,
											"end": 279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 293,
											"end": 307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 331,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 318,
											"end": 321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 310,
											"end": 331,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 293,
											"end": 331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 359,
											"end": 360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 356,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 353,
											"end": 360,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 353,
											"end": 373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 353,
											"end": 373,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 353,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 353,
											"end": 373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 353,
											"end": 373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 371,
											"end": 373,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 364,
											"end": 367,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 364,
											"end": 373,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 364,
											"end": 373,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 353,
											"end": 373,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 353,
											"end": 373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 345,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 345,
											"end": 374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 345,
											"end": 374,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 345,
											"end": 374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 405,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 402,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 396,
											"end": 406,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 396,
											"end": 440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 396,
											"end": 440,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 396,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 396,
											"end": 440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 396,
											"end": 440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 434,
											"end": 440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 410,
											"end": 418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 419,
											"end": 429,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 410,
											"end": 430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 410,
											"end": 430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 410,
											"end": 430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 410,
											"end": 430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 410,
											"end": 430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 410,
											"end": 430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 410,
											"end": 430,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 410,
											"end": 430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 410,
											"end": 430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 410,
											"end": 430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 410,
											"end": 430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 410,
											"end": 430,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 410,
											"end": 430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 410,
											"end": 430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 430,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 410,
											"end": 430,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 410,
											"end": 440,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 410,
											"end": 440,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 396,
											"end": 440,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 396,
											"end": 440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 388,
											"end": 441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 388,
											"end": 441,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 388,
											"end": 441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 502,
											"end": 508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 488,
											"end": 498,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 479,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 479,
											"end": 499,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 479,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 479,
											"end": 499,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 479,
											"end": 499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 479,
											"end": 499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 479,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 479,
											"end": 499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 479,
											"end": 499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 479,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 479,
											"end": 499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 499,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 479,
											"end": 499,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 456,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 465,
											"end": 475,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 456,
											"end": 476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 456,
											"end": 476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 456,
											"end": 476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 456,
											"end": 476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 456,
											"end": 476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 456,
											"end": 508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 456,
											"end": 508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 456,
											"end": 508,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 456,
											"end": 508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 527,
											"end": 537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 527,
											"end": 537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 522,
											"end": 708,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 522,
											"end": 708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 543,
											"end": 546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 539,
											"end": 540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 546,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 522,
											"end": 708,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 522,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 522,
											"end": 708,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 623,
											"end": 629,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 597,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 606,
											"end": 616,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 617,
											"end": 618,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 606,
											"end": 619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 606,
											"end": 619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 606,
											"end": 619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 606,
											"end": 619,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 606,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 606,
											"end": 619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 606,
											"end": 619,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 606,
											"end": 619,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 606,
											"end": 619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 606,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 606,
											"end": 619,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 606,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 606,
											"end": 619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 606,
											"end": 619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 606,
											"end": 619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 597,
											"end": 620,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 597,
											"end": 620,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 597,
											"end": 620,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 597,
											"end": 620,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 597,
											"end": 620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 597,
											"end": 620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 597,
											"end": 620,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 597,
											"end": 620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 597,
											"end": 620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 597,
											"end": 620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 597,
											"end": 620,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 597,
											"end": 620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 620,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 597,
											"end": 620,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 597,
											"end": 629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 571,
											"end": 579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 580,
											"end": 590,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 591,
											"end": 592,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 580,
											"end": 593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 580,
											"end": 593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 580,
											"end": 593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 580,
											"end": 593,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 580,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 580,
											"end": 593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 580,
											"end": 593,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 580,
											"end": 593,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 580,
											"end": 593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 580,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 580,
											"end": 593,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 580,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 580,
											"end": 593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 580,
											"end": 593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 580,
											"end": 593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 571,
											"end": 594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 571,
											"end": 594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 571,
											"end": 594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 571,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 594,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 571,
											"end": 629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 571,
											"end": 629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 571,
											"end": 629,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 571,
											"end": 629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 548,
											"end": 551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 548,
											"end": 551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 522,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 522,
											"end": 708,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 522,
											"end": 708,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 522,
											"end": 708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 522,
											"end": 708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 728,
											"end": 732,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 721,
											"end": 732,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 721,
											"end": 732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 721,
											"end": 732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 721,
											"end": 732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 743,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 870,
											"end": 961,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 870,
											"end": 961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 941,
											"end": 950,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 917,
											"end": 925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 926,
											"end": 936,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 917,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 917,
											"end": 937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 917,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 917,
											"end": 937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 917,
											"end": 937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 917,
											"end": 937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 917,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 917,
											"end": 937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 917,
											"end": 937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 917,
											"end": 937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 917,
											"end": 937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 917,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 917,
											"end": 937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 917,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 937,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 917,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 950,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 917,
											"end": 950,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 917,
											"end": 950,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 917,
											"end": 950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 917,
											"end": 950,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 917,
											"end": 950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 917,
											"end": 950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 917,
											"end": 950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 917,
											"end": 950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 917,
											"end": 950,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 917,
											"end": 950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 870,
											"end": 961,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"batchTransfer(address[],uint256)": "83f12fec",
							"deposit()": "d0e30db0",
							"getBalance()": "12065fe0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"batchTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEC_Target/BEC_Target.sol\":\"BEC_Target\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEC_Target/BEC_Target.sol\":{\"keccak256\":\"0x107dcdd5fe60d9a5ba176ca8d7825f71b8d124c7eb72550a2d53cac59dc31930\",\"urls\":[\"bzz-raw://7748efec8f615c0e832a55a3948dd0f967411bbbaa07efd5551eb47d58b680f4\",\"dweb:/ipfs/QmURAKNxqtq91yrGVpgJA7PwbKRBLNQdPeS9NyAwrrNQ8N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/BEC_Target/BEC_Target.sol:BEC_Target",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/BEC_Target/BEC_Target.sol": {
				"ast": {
					"absolutePath": "contracts/BEC_Target/BEC_Target.sol",
					"exportedSymbols": {
						"BEC_Target": [
							117
						]
					},
					"id": 118,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "BEC_Target",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 117,
									"src": "91:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "99:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "91:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "109:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "237:506:0",
										"statements": [
											{
												"assignments": [
													16
												],
												"declarations": [
													{
														"constant": false,
														"id": 16,
														"mutability": "mutable",
														"name": "cnt",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 92,
														"src": "251:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 15,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "251:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 19,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 17,
														"name": "_receivers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "262:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "262:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "251:28:0"
											},
											{
												"assignments": [
													21
												],
												"declarations": [
													{
														"constant": false,
														"id": 21,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 92,
														"src": "293:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 20,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "293:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 28,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 24,
																"name": "cnt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "318:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "310:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 22,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "310:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "310:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 26,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "325:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "310:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "293:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 30,
																	"name": "cnt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "353:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "359:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "353:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 33,
																	"name": "cnt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "364:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3230",
																	"id": 34,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "371:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "364:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "353:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 29,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "345:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "345:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "345:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 42,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 40,
																	"name": "_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "396:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "405:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "396:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 43,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "410:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 46,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 44,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "419:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 45,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "419:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "410:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 47,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "434:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "410:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "396:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 39,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "388:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "388:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "388:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 52,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "456:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 55,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 53,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "465:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "465:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "456:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 56,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "479:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 59,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 57,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "488:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "488:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "479:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"id": 60,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "502:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "479:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "456:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "456:52:0"
											},
											{
												"body": {
													"id": 88,
													"nodeType": "Block",
													"src": "553:155:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 74,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "571:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 78,
																	"indexExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 75,
																			"name": "_receivers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 8,
																			"src": "580:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 77,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 76,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 65,
																			"src": "591:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "580:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "571:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 85,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 79,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5,
																			"src": "597:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 83,
																		"indexExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 80,
																				"name": "_receivers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 8,
																				"src": "606:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 82,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 81,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 65,
																				"src": "617:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "606:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "597:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 84,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "623:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "597:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "571:58:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 87,
															"nodeType": "ExpressionStatement",
															"src": "571:58:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 68,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "539:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 69,
														"name": "cnt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "543:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "539:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 89,
												"initializationExpression": {
													"assignments": [
														65
													],
													"declarations": [
														{
															"constant": false,
															"id": 65,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 89,
															"src": "527:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 64,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "527:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 67,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "536:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "527:10:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "548:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 71,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "548:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 73,
													"nodeType": "ExpressionStatement",
													"src": "548:3:0"
												},
												"nodeType": "ForStatement",
												"src": "522:186:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "728:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 14,
												"id": 91,
												"nodeType": "Return",
												"src": "721:11:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "83f12fec",
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "batchTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "_receivers",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 93,
												"src": "170:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 6,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "170:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 7,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "170:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 93,
												"src": "199:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "169:45:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 93,
												"src": "231:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 12,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "231:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "230:6:0"
									},
									"scope": 117,
									"src": "147:596:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "800:52:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 98,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "821:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 101,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 99,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "830:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "830:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "821:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 97,
												"id": 102,
												"nodeType": "Return",
												"src": "814:27:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "12065fe0",
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "772:2:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 104,
												"src": "795:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "795:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "794:6:0"
									},
									"scope": 117,
									"src": "753:99:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "903:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 107,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "917:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 110,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 108,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "926:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "926:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "917:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 111,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "941:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "941:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "917:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 114,
												"nodeType": "ExpressionStatement",
												"src": "917:33:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d0e30db0",
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "886:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "903:0:0"
									},
									"scope": 117,
									"src": "870:91:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 118,
							"src": "61:906:0"
						}
					],
					"src": "32:935:0"
				},
				"id": 0
			}
		}
	}
}